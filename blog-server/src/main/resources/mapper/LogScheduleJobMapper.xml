<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yond.blog.mapper.LogScheduleJobMapper">

    <resultMap id="log" type="com.yond.blog.entity.LogScheduleJobDO">
        <id property="id" column="id"/>
        <result property="jobId" column="job_id"/>
        <result property="beanName" column="bean_name"/>
        <result property="methodName" column="method_name"/>
        <result property="params" column="params"/>
        <result property="status" column="status"/>
        <result property="error" column="error"/>
        <result property="duration" column="duration"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        select id, job_id, bean_name, method_name, params, runStatus, status, error, duration, create_time
    </sql>


    <select id="getJobLogListByDate" resultMap="log">
        select id, job_id, bean_name, method_name, params, runStatus, status, error, duration, create_time
        from log_schedule_job
        <where>
            <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
                create_time between #{startDate} and #{endDate}
            </if>
        </where>
    </select>


    <insert id="saveJobLog" parameterType="com.yond.blog.entity.LogScheduleJobDO" useGeneratedKeys="true"
            keyProperty="logId">
        insert into log_schedule_job (job_id, bean_name, method_name, params, status, error, duration, create_time)
        values (#{jobId}, #{beanName}, #{methodName}, #{params}, #{status}, #{error}, #{duration}, #{createTime})
    </insert>

    <delete id="deleteJobLogByLogId">
        delete
        from log_schedule_job
        where id = #{logId}
    </delete>
</mapper>